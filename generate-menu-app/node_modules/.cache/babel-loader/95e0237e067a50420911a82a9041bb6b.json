{"ast":null,"code":"var _jsxFileName = \"/Users/la_thais.paz/Workspace/generate-menu-app/src/pages/Login.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCurrentAccountState = () => ({\n      email: this.state.email,\n      password: this.state.password\n    });\n\n    this.validateForm = account => {\n      if (validator.isValid(account)) {\n        return true;\n      }\n\n      this.setState({\n        errors: { ...validator.getErrors(account),\n          form: 'Please correct the fields above'\n        }\n      });\n    };\n\n    this.removeErrorsIfValidated = account => {\n      if (validator.isValid(account)) {\n        this.setState({\n          errors: { ...validator.getErrors(account),\n            form: ''\n          }\n        });\n        return true;\n      }\n    };\n\n    this.handleChangeFor = fieldName => event => {\n      this.setState({\n        [fieldName]: event.target.value\n      });\n    };\n\n    this.handleBlurFor = fieldName => event => {\n      const validate = validator.fields[fieldName];\n      const account = this.getCurrentAccountState();\n\n      if (this.validateForm(account)) {\n        this.setState({\n          errors: { ...this.state.errors,\n            [fieldName]: validate(event.target.value),\n            form: ''\n          }\n        });\n      } else {\n        this.setState({\n          errors: { ...this.state.errors,\n            [fieldName]: validate(event.target.value)\n          }\n        });\n      }\n\n      if (!this.removeErrorsIfValidated(account)) return;\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const loginRequest = {\n      email: 'flavia.dessoldi@thoughtworks.com',\n      password: 'Banana2'\n    };\n    console.log('loginRequest', loginRequest);\n    login(loginRequest).then(response => {\n      localStorage.setItem(\"ACCESS_TOKEN\", response.token); // this.props.onLogin();\n\n      console.log(window.localStorage.getItem(\"ACCESS_TOKEN\"));\n    }).catch(error => {\n      console.log(\"erro\"); // if(error.status === 401) {\n      //     notification.error({\n      //         message: 'Polling App',\n      //         description: 'Your Username or Password is incorrect. Please try again!'\n      //     });                    \n      // } else {\n      //     notification.error({\n      //         message: 'Polling App',\n      //         description: error.message || 'Sorry! Something went wrong. Please try again!'\n      //     });                                            \n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"login\",\n      label: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      id: \"password\",\n      label: \"Senha\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"login_button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Login\"));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/la_thais.paz/Workspace/generate-menu-app/src/pages/Login.js"],"names":["React","TextField","Login","Component","constructor","props","getCurrentAccountState","email","state","password","validateForm","account","validator","isValid","setState","errors","getErrors","form","removeErrorsIfValidated","handleChangeFor","fieldName","event","target","value","handleBlurFor","validate","fields","onSubmit","preventDefault","loginRequest","console","log","login","then","response","localStorage","setItem","token","window","getItem","catch","error","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        };\n    }\n\n    getCurrentAccountState = () => ({\n        email: this.state.email,\n        password: this.state.password\n    });\n\n    validateForm = account => {\n        if (validator.isValid(account)) {\n            return true;\n        }\n\n        this.setState({\n            errors: {\n                ...validator.getErrors(account),\n                form: 'Please correct the fields above'\n            }\n        });\n    };\n\n    onSubmit(event) {\n        event.preventDefault();\n        const loginRequest = { email: 'flavia.dessoldi@thoughtworks.com', password: 'Banana2' };\n        console.log('loginRequest', loginRequest)\n        login(loginRequest).then(response => {\n            localStorage.setItem(\"ACCESS_TOKEN\", response.token);\n            // this.props.onLogin();\n            console.log(window.localStorage.getItem(\"ACCESS_TOKEN\"))\n        }).catch(error => {\n            console.log(\"erro\")\n            // if(error.status === 401) {\n            //     notification.error({\n            //         message: 'Polling App',\n            //         description: 'Your Username or Password is incorrect. Please try again!'\n            //     });                    \n            // } else {\n            //     notification.error({\n            //         message: 'Polling App',\n            //         description: error.message || 'Sorry! Something went wrong. Please try again!'\n            //     });                                            \n        });\n    };\n\n    removeErrorsIfValidated = account => {\n        if (validator.isValid(account)) {\n            this.setState({\n                errors: {\n                    ...validator.getErrors(account),\n                    form: ''\n                }\n            });\n            return true;\n        }\n    };\n\n    handleChangeFor = fieldName => event => {\n        this.setState({ [fieldName]: event.target.value });\n    };\n\n    handleBlurFor = fieldName => event => {\n        const validate = validator.fields[fieldName];\n        const account = this.getCurrentAccountState();\n        if (this.validateForm(account)) {\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    [fieldName]: validate(event.target.value),\n                    form: ''\n                }\n            });\n        } else {\n            this.setState({\n                errors: {\n                    ...this.state.errors,\n                    [fieldName]: validate(event.target.value)\n                }\n            });\n        }\n        if (!this.removeErrorsIfValidated(account)) return\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <TextField required id=\"login\" label=\"Login\" />\n                <TextField required id=\"password\" label=\"Senha\" />\n\n                <Button variant=\"login_button\">Login</Button>\n\n            </div>\n\n        );\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}